<?xml version="1.0" encoding="UTF-8"?>

<project name="HarperHallUtil" default="distjar" basedir=".">

	<property name="srcdir" value="${basedir}/src"/>
	<property name="bindir" value="${basedir}/bin"/>        
	<property name="instrumented.bindir" value="${basedir}/instrumented.bin"/>        
	<property name="testdir" value="/tmp/HarperHallUtil"/>        
	<property name="coverage.dir" value="${basedir}/coverage"/>        

	<property name="extlib.dir" value="/opt/java_stuff"/>
	<property name="hyadesdir" value="${extlib.dir}/eclipse-3.1/plugins/org.eclipse.hyades.test.tools.core_4.1.0"/>
	<property name="junitdir" value="${extlib.dir}/junit3.8.1"/>
	<property name="commonscollectiondir" value="${extlib.dir}/commons-collections-3.1/"/> 
	<property name="getopt.jar" value="${extlib.dir}/java-getopt-1.0.12/build/lib/gnu.getopt.jar"/>
	<property name="log4j.jar" value="${extlib.dir}/logging-log4j-1.2.13/dist/lib/log4j-1.2.13.jar" />
	<property name="asm.jar" value="${extlib.dir}/cobertura-1.8/lib/asm-2.2.1.jar"/>
	<property name="jakarta-oro.jar" value="${extlib.dir}/cobertura-1.8/lib/jakarta-oro-2.0.8.jar"/>
	<property name="cobertura.jar" value="${extlib.dir}/cobertura-1.8/cobertura.jar"/>

    <path id="classpath">
		<pathelement path="${commonscollectiondir}/commons-collections-3.1.jar"/>
    	<pathelement path="${log4j.jar}"/>
    	<pathelement path="${junitdir}/junit.jar"/>
		<pathelement path="${hyadesdir}/common.runner.jar"/>
    	<pathelement path="${getopt.jar}"/>
    	<pathelement path="${asm.jar}"/>
    	<pathelement path="${jakarta-oro.jar}"/>
    	<pathelement path="${cobertura.jar}"/>
	</path>

	<taskdef classpathref="classpath" resource="tasks.properties"/>

	<!-- ================================= 
          target: init              
         ================================= -->
    <target name="init" depends="" description="--> set up build process">
    </target>

	
    <!-- ================================= 
          target: prepare              
         ================================= -->
    <target name="prepare" depends="init" description="--> set directories, basic files, etc.">
        <mkdir dir="${bindir}"/>
    	<mkdir dir="${instrumented.bindir}"/>
		<mkdir dir="${test-report.dir}"/>
    	<mkdir dir="${coverage.dir}"/>
    </target>


    <!-- ================================= 
          target: fetch              
         ================================= -->
    <target name="fetch" depends="init" description="get current code from versioninig system">
        
    </target>


    <!-- ================================= 
          target: compile              
         ================================= -->
    <target name="compile" depends="prepare,compile_java" description="compile all code">
    </target>


    <!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="distjar" description="incremtaly build all elements">

    </target>


    <!-- ================================= 
          target: docs              
         ================================= -->
	<target name="coverage_java" depends="test_java">
	    <cobertura-report format="html" srcdir="${srcdir}" 
	    	datafile="${basedir}/cobertura.ser" destdir="${coverage.dir}"/>
	</target>

    <target name="docs" depends="prepare,coverage_java" description="--> create all documentation">
    </target>


    <!-- ================================= 
          target: all              
         ================================= -->
    <target name="all"  depends="build,test_java,docs,srcjar" description="build all from scratch">

    </target>


	<!-- =================================
	      target: clean
	      ================================ -->
	<target name="clean">
		<delete dir="${bindir}"/>
		<delete dir="${instrumented.bindir}"/>
		<delete file="${basedir}/cobertura.ser"/>
		<delete file="${basedir}/harperHallUtil.jar"/>		
		<delete file="${basedir}/harperHallUtil-src.jar"/>		
	</target>
	
	<!-- ================================= 
          target: instrument java              
         ================================= -->
	<target name="instrument_java">
		<echo>copertura instrument start</echo>
		<cobertura-instrument todir="${instrumented.bindir}" datafile="${basedir}/cobertura.ser">
		    <fileset dir="${bindir}">
		        <include name="**/*.class"/>
		    	<exclude name="**/MultiHashMap$1.class"/>
		    	<exclude name="**/*Test.class"/>
		    </fileset>
		</cobertura-instrument>
		<echo>copertura instrument end</echo>
	</target>

	<!-- ================================= 
          target: test_java              
         ================================= -->
	<property name="test-report.dir" value="${basedir}/test-results"/>
		
	<target name="test_java" depends="compile_java,instrument_java" description="run all tests">
		<echo>test-report.dir is ${test-report.dir}</echo>
		<echo>copertura data file is ${basedir}/cobertura.ser</echo>
		<junit fork="yes">
			<sysproperty key="java.security.policy" value="${srcdir}/de/harper_hall/wotan/broker/broker.policy"/>
			<sysproperty key="net.sourceforge.cobertura.datafile" value="${basedir}/cobertura.ser" />
			<classpath>
				<pathelement path="${commonscollectiondir}/commons-collections-3.1.jar"/>
		    	<pathelement path="${log4j.jar}"/>
				<pathelement path="${junitdir}/junit.jar"/>
				<pathelement path="${hyadesdir}/common.runner.jar"/>
		    	<pathelement path="${getopt.jar}"/>
		    	<pathelement path="${asm.jar}"/>
		    	<pathelement path="${jakarta-oro.jar}"/>
		    	<pathelement path="${cobertura.jar}"/>
				<pathelement path="${instrumented.bindir}"/>
				<pathelement path="${bindir}"/>
			</classpath>
			<formatter type="xml"/>
			<test name="de.harper_hall.util.tests.AllOfHarperHallUtilTests"
				todir="${test-report.dir}"/>
		</junit>
	</target>



    <!-- - - - - - - - - - - - - - - - - - 
          target: compile_java 
	          compile all java classes                      
         - - - - - - - - - - - - - - - - - -->
    <target name="compile_java" depends="prepare">

	    <echo message="srcdir: ${srcdir}"/>
    	<echo message="bindir: ${bindir}"/>
    	<javac srcdir="${srcdir}"
            destdir="${bindir}"    		
            classpathref="classpath"
             debug="on"
    		debuglevel="lines,vars,source"
    	/>            

    </target>


	
    <target name="distjar"  description="Create a jar for the HarperHallUtil project" depends="compile_java">
        <jar jarfile="harperHallUtil.jar" includes="**/*.class" basedir="${bindir}"/>
    </target>
	
    <target name="srcjar"  description="Create a source jar for the HarperHallUtil project">
        <jar jarfile="harperHallUtil-src.jar" includes="**" basedir="${srcdir}"/>
    </target>
	
	<target name="publish" depends="distjar,srcjar" description="write the jars to a directory for other projects to see">
		<echo>artifact.lib: ${artifact.lib}</echo>
		<mkdir dir="${artifact.lib}"/>
		<echo>trying to copy ${basedir}/harperHallUtil.jar</echo>
		<flopy failonerror="true" verbose="true" file="${basedir}/harperHallUtil.jar" todir="$(artifact.lib)"/>
		<copy verbose="true" file="${basedir}/harperHallUtil-src.jar" todir="$(artifact.lib)"/>
		<echo>got here (tick)</echo>
	</target>
</project> 